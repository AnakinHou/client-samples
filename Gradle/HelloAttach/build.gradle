plugins {
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.7'
    id 'com.gluonhq.client-gradle-plugin' version '0.0.10-SNAPSHOT'
}

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url 'https://nexus.gluonhq.com/nexus/content/repositories/releases/'
    }
}

def platform = "ios"
//def platform = "desktop"
def attach = "4.0.2-SNAPSHOT"

dependencies {
    implementation "com.gluonhq.attach:cache:$attach:$platform"
    implementation "com.gluonhq.attach:display:$attach:$platform"
    implementation "com.gluonhq.attach:lifecycle:$attach:$platform"
    implementation "com.gluonhq.attach:runtime-args:$attach:$platform"
    implementation "com.gluonhq.attach:settings:$attach:$platform"
    implementation "com.gluonhq.attach:storage:$attach:$platform"
    if (platform == "ios") {
        implementation "com.gluonhq.attach:accelerometer:$attach:$platform"
        implementation "com.gluonhq.attach:barcode-scan:$attach:$platform"
        implementation "com.gluonhq.attach:battery:$attach:$platform"
        implementation "com.gluonhq.attach:ble:$attach:$platform"
        implementation "com.gluonhq.attach:browser:$attach:$platform"
        implementation "com.gluonhq.attach:compass:$attach:$platform"
        implementation "com.gluonhq.attach:connectivity:$attach:$platform"
        implementation "com.gluonhq.attach:device:$attach:$platform"
        implementation "com.gluonhq.attach:dialer:$attach:$platform"
        implementation "com.gluonhq.attach:magnetometer:$attach:$platform"
        implementation "com.gluonhq.attach:local-notifications:$attach:$platform"
        implementation "com.gluonhq.attach:orientation:$attach:$platform"
        implementation "com.gluonhq.attach:pictures:$attach:$platform"
        implementation "com.gluonhq.attach:position:$attach:$platform"
        implementation "com.gluonhq.attach:share:$attach:$platform"
        implementation "com.gluonhq.attach:statusbar:$attach:$platform"
        implementation "com.gluonhq.attach:vibration:$attach:$platform"
        implementation "com.gluonhq.attach:video:$attach:$platform"
    } else {
        implementation "com.gluonhq.attach:accelerometer:$attach"
        implementation "com.gluonhq.attach:barcode-scan:$attach"
        implementation "com.gluonhq.attach:battery:$attach"
        implementation "com.gluonhq.attach:ble:$attach"
        implementation "com.gluonhq.attach:browser:$attach"
        implementation "com.gluonhq.attach:compass:$attach"
        implementation "com.gluonhq.attach:connectivity:$attach"
        implementation "com.gluonhq.attach:device:$attach"
        implementation "com.gluonhq.attach:dialer:$attach"
        implementation "com.gluonhq.attach:local-notifications:$attach"
        implementation "com.gluonhq.attach:magnetometer:$attach"
        implementation "com.gluonhq.attach:orientation:$attach"
        implementation "com.gluonhq.attach:pictures:$attach"
        implementation "com.gluonhq.attach:position:$attach"
        implementation "com.gluonhq.attach:share:$attach"
        implementation "com.gluonhq.attach:statusbar:$attach"
        implementation "com.gluonhq.attach:vibration:$attach"
        implementation "com.gluonhq.attach:video:$attach"
    }
    implementation "com.gluonhq.attach:util:$attach"
}

gluonClient {
    def attachList = platform == "desktop" ?
            [
             "com.gluonhq.attach.cache.impl.DesktopCacheService",
             "com.gluonhq.attach.display.impl.DesktopDisplayService",
             "com.gluonhq.attach.lifecycle.impl.DesktopLifecycleService",
             "com.gluonhq.attach.runtimeargs.impl.DesktopRuntimeArgsService",
             "com.gluonhq.attach.settings.impl.DesktopSettingsService",
             "com.gluonhq.attach.storage.impl.DesktopStorageService"
            ] :
            [
             "com.gluonhq.attach.accelerometer.impl.IOSAccelerometerService",
             "com.gluonhq.attach.barcode.impl.IOSBarcodeScanService",
             "com.gluonhq.attach.battery.impl.IOSBatteryService",
             "com.gluonhq.attach.ble.impl.IOSBleService",
             "com.gluonhq.attach.browser.impl.IOSBrowserService",
             "com.gluonhq.attach.cache.impl.IOSCacheService",
             "com.gluonhq.attach.compass.impl.IOSCompassService",
             "com.gluonhq.attach.connectivity.impl.IOSConnectivityService",
             "com.gluonhq.attach.device.impl.IOSDeviceService",
             "com.gluonhq.attach.dialer.impl.IOSDialerService",
             "com.gluonhq.attach.display.impl.IOSDisplayService",
             "com.gluonhq.attach.lifecycle.impl.IOSLifecycleService",
             "com.gluonhq.attach.localnotifications.impl.IOSLocalNotificationsService",
             "com.gluonhq.attach.magnetometer.impl.IOSMagnetometerService",
             "com.gluonhq.attach.orientation.impl.IOSOrientationService",
             "com.gluonhq.attach.pictures.impl.IOSPicturesService",
             "com.gluonhq.attach.position.impl.IOSPositionService",
             "com.gluonhq.attach.runtimeargs.impl.IOSRuntimeArgsService",
             "com.gluonhq.attach.settings.impl.IOSSettingsService",
             "com.gluonhq.attach.share.impl.IOSShareService",
             "com.gluonhq.attach.statusbar.impl.IOSStatusBarService",
             "com.gluonhq.attach.storage.impl.IOSStorageService",
             "com.gluonhq.attach.vibration.impl.IOSVibrationService",
             "com.gluonhq.attach.video.impl.IOSVideoService"
            ]

    reflectionList = attachList
    jniList = attachList
    target = platform == "desktop" ? "host" : "ios"
//    verbose = true

    if (platform == "ios") {
        releaseSymbolsList = ["_Java_com_sun_glass_ui_ios_IosWindow__1updateBounds",
                              "_Java_com_sun_glass_ui_ios_IosWindow__1updateInput"]
    }
    resourcesList = ["mp4"]
}

javafx {
    version = "12.0.1"
    modules = [ "javafx.controls", "javafx.media" ]
}

mainClassName = 'attach.HelloAttach'